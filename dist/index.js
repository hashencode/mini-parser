const t={containerWidth:0},e="area,base,canvas,embed,frame,head,iframe,input,link,map,meta,param,rp,script,source,style,textarea,title,track,wbr".split(","),s="area,base,br,col,circle,ellipse,embed,frame,hr,img,input,line,link,meta,param,path,polygon,rect,source,track,use,wbr".split(","),n="address,article,aside,blockquote,dd,div,dl,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ol,p,pre,section,table,ul".split(","),i={img:"image",video:"video",a:"link"},r=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,o=/^<\/([-A-Za-z0-9_]+)[^>]*>/,a=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/)>/,c=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,l=[[/<\?xml.*\?>\n/,""],[/<.*!doctype.*\>\n/,""],[/<.*!DOCTYPE.*\>\n/,""],[/<!--.*?-->/gi,""],[/\/\*.*?\*\//gi,""]],h=/(\d*)(.*)/,u={lt:"<",gt:">",quot:'"',apos:"'",ensp:" ",emsp:" ",nbsp:" ",semi:";",ndash:"–",mdash:"—",middot:"·",lsquo:"‘",rsquo:"’",ldquo:"“",rdquo:"”",bull:"•",hellip:"…"};class d{config;extraData;constructor({html:e,config:s,extraData:n}){return this.config=s||{},this.extraData=n||t,e?this.steps(e):[]}steps(t){const e=this.cleanHtml(t),s=this.htmlToJson(e);return this.jsonToSkeleton(s)}cleanHtml(t){return t?(l.forEach((e=>{const[s,n]=e;t=t.replace(s,n)})),t):""}decodeHtml(t){if(!t)return"";let e=t.indexOf("&");for(;-1!==e;){const s=t.indexOf(";",e+3);let n;if(-1===s)break;"#"===t[e+1]?(n=parseInt(("x"===t[e+2]?"0":"")+t.substring(e+2,s)),isNaN(n)||(t=t.substr(0,e)+String.fromCharCode(n)+t.substr(s+1))):(n=t.substring(e+1,s),u[n]&&(t=t.substr(0,e)+(u[n]||"&")+t.substr(s+1))),e=t.indexOf("&",e+1)}return t}isInvalidElement(t){const{ignoredElement:s=e}=this.config;return s.includes(t)}isSelfClosingElement(t,e){return a.test(t)||s.includes(e)}formatElementName(t){const{transMap:e=i}=this.config;return t in e?e[t]:"view"}attributeProcessor(t,e){const{format:s={},decodeAttributeValue:n=!0}=this.config;if(n&&Object.keys(t).forEach((e=>{"string"==typeof t[e]&&(t[e]=this.decodeHtml(t[e]))})),s[e]){const n=s[e];Object.keys(n).forEach((e=>{const s=n[e];t[e]="function"==typeof s?s(t[e],t):s}))}return t}styleProcessor(t){const e=t.split(";"),s={};return e.forEach((t=>{if(!t)return;const[e,n=""]=t.split(":");if(e){const t=e.trim();let i=n.trim();s[t]=i}})),s}formatAttributes(t,e){if(!t)return{};const s=this;let n={};return t.replace(c,(function(t,e,i){const r=Array.prototype.slice.call(arguments);if(r.length>=3){const t=i?i.replace(/(^|[^\\])"/g,'$1\\"'):"";"style"===e&&(n.styleObj=s.styleProcessor(t)),n[e]=t}return""})),this.attributeProcessor(n,e)}updatehtml(t,e){return t.substring(e.length)}htmlToJson(t){const e=[];for(;t;){if(0===t.indexOf("</")){const n=t.match(o);if(!n)continue;const[i,r]=n,a=this.updatehtml(t,i);if(this.isInvalidElement(r)){t=a;continue}t=a;const c=s.includes(r);e.push({type:c?"selfClosing":"end",name:this.formatElementName(r),originName:r});continue}if(0===t.indexOf("<")){const s=t.match(r);if(!s)continue;const[i,o,a=""]=s,c=this.updatehtml(t,i);if(this.isInvalidElement(o)){t=c;continue}t=c;const l=this.isSelfClosingElement(i,o),h=this.formatAttributes(a,o);let u=n.includes(o)?"block":"inline";const d=h.styleObj;if(d){const{display:t}=d;t&&(u=t)}e.push({type:l?"selfClosing":"start",name:this.formatElementName(o),originName:o,attrs:h,display:u});continue}const i=t.indexOf("<"),a=i<0;let c=a?t:t.substring(0,i);t=a?"":t.substring(i),e.push({type:"text",name:"text",originName:"text",display:"inline",attrs:this.attributeProcessor({content:c},"text")})}return e}skeletonGenerator(t,e=0){if(t.length<=0)return[];let s=0;const n=[];for(;s<t.length;){const{genKey:i,type:r,...o}=t[s],a=`${e}_${s}_${o.name}`,c=["start","end"].includes(r)?"default":r;if("start"===r){const e=t.findIndex((({type:t,genKey:e})=>"end"===t&&e===i));if(-1===e)break;n.push({id:a,...o,type:c,children:this.skeletonGenerator(t.slice(s+1,e),s)}),s=e+1}else n.push({id:a,...o,type:c}),s++}return n}jsonToSkeleton(t){const e=[];t.forEach(((t,s)=>{const{type:n}=t;switch(n){case"start":t.genKey=s,e.push(s);break;case"end":const n=e.splice(e.length-1,1)[0];t.genKey=n}}));const s=this.skeletonGenerator(t);return this.adaptiveProcessor(s)}adaptiveProcessor(t,e){const{adaptive:s=!0}=this.config,{containerWidth:n}=this.extraData;return s&&n?(t.forEach((t=>{const{attrs:s,children:i}=t;let r=e||0;if(s&&s.styleObj){const t=s.styleObj;t&&(Object.keys(t).forEach((e=>{t[e].replace(h,(function(s,i,o){if(i&&!isNaN(i)&&"px"===o)if("width"===e){(r||+i>n)&&(r=r||+(n/+i).toFixed(3));const e=+i>n?n:(r*i).toFixed(1);t.width=`${e}${o}`}else"height"===e&&r>0&&(t.height=`${i*r}${o}`);return""}))})),s.styleObj=t,s.style=Object.keys(t).map((e=>`${e}:${t[e]}`)).join(";"))}return i&&(t.children=this.adaptiveProcessor(i,r)),t})),t):t}}export{d as MiniParser,e as defaultIgnoreElements,i as defaultTransMap};
