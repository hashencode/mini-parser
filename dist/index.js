"use strict";const e={timeout:2e3,ignoredElement:[],delay:0,image:{customComponent:"",defaultClass:"mini-parser-image",clearAttrs:[],buildInAttrs:{mode:"widthFix",webp:!0,lazyLoad:!1,showMenu:!1}},text:{customComponent:"",defaultClass:"mini-parser-text",buildInAttrs:{decode:!1,userSelect:!1}},video:{customComponent:"",defaultClass:"mini-parser-video",clearAttrs:[],buildInAttrs:{autoplay:!1,controls:!0,enablePlayGesture:!1,enableProgressGesture:!0,loop:!1,muted:!1,objectFit:"contain",playBtnPosition:"bottom",showCastingButton:!1,showCenterPlayBtn:!0,showFullscreenBtn:!0,showMuteBtn:!1,showPlayBtn:!0,showProgress:!0,title:"",vslideGesture:!1,vslideGestureInFullscreen:!0}},view:{customComponent:"",defaultClass:"mini-parser-view",clearAttrs:[]},link:{customComponent:"",defaultClass:"mini-parser-link",clearAttrs:[]}},t=["img","video","a"],s={img:"image",video:"video",a:"link"},g=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,n=/^<\/([-A-Za-z0-9_]+)[^>]*>/,i=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\/>/,r="area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr".split(","),o=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,a=[[/<\?xml.*\?>\n/,""],[/<.*!doctype.*\>\n/,""],[/<.*!DOCTYPE.*\>\n/,""],[/\r?\n+/g,""],[/<!--.*?-->/gi,""],[/\/\*.*?\*\//gi,""],[/[ ]+</gi,"<"],[/&forall;/g,"∀"],[/&part;/g,"∂"],[/&exists;/g,"∃"],[/&empty;/g,"∅"],[/&nabla;/g,"∇"],[/&isin;/g,"∈"],[/&notin;/g,"∉"],[/&ni;/g,"∋"],[/&prod;/g,"∏"],[/&sum;/g,"∑"],[/&minus;/g,"−"],[/&lowast;/g,"∗"],[/&radic;/g,"√"],[/&prop;/g,"∝"],[/&infin;/g,"∞"],[/&ang;/g,"∠"],[/&and;/g,"∧"],[/&or;/g,"∨"],[/&cap;/g,"∩"],[/&cap;/g,"∪"],[/&int;/g,"∫"],[/&there4;/g,"∴"],[/&sim;/g,"∼"],[/&cong;/g,"≅"],[/&asymp;/g,"≈"],[/&ne;/g,"≠"],[/&le;/g,"≤"],[/&ge;/g,"≥"],[/&sub;/g,"⊂"],[/&sup;/g,"⊃"],[/&nsub;/g,"⊄"],[/&sube;/g,"⊆"],[/&supe;/g,"⊇"],[/&oplus;/g,"⊕"],[/&otimes;/g,"⊗"],[/&perp;/g,"⊥"],[/&sdot;/g,"⋅"],[/&Alpha;/g,"Α"],[/&Beta;/g,"Β"],[/&Gamma;/g,"Γ"],[/&Delta;/g,"Δ"],[/&Epsilon;/g,"Ε"],[/&Zeta;/g,"Ζ"],[/&Eta;/g,"Η"],[/&Theta;/g,"Θ"],[/&Iota;/g,"Ι"],[/&Kappa;/g,"Κ"],[/&Lambda;/g,"Λ"],[/&Mu;/g,"Μ"],[/&Nu;/g,"Ν"],[/&Xi;/g,"Ν"],[/&Omicron;/g,"Ο"],[/&Pi;/g,"Π"],[/&Rho;/g,"Ρ"],[/&Sigma;/g,"Σ"],[/&Tau;/g,"Τ"],[/&Upsilon;/g,"Υ"],[/&Phi;/g,"Φ"],[/&Chi;/g,"Χ"],[/&Psi;/g,"Ψ"],[/&Omega;/g,"Ω"],[/&alpha;/g,"α"],[/&beta;/g,"β"],[/&gamma;/g,"γ"],[/&delta;/g,"δ"],[/&epsilon;/g,"ε"],[/&zeta;/g,"ζ"],[/&eta;/g,"η"],[/&theta;/g,"θ"],[/&iota;/g,"ι"],[/&kappa;/g,"κ"],[/&lambda;/g,"λ"],[/&mu;/g,"μ"],[/&nu;/g,"ν"],[/&xi;/g,"ξ"],[/&omicron;/g,"ο"],[/&pi;/g,"π"],[/&rho;/g,"ρ"],[/&sigmaf;/g,"ς"],[/&sigma;/g,"σ"],[/&tau;/g,"τ"],[/&upsilon;/g,"υ"],[/&phi;/g,"φ"],[/&chi;/g,"χ"],[/&psi;/g,"ψ"],[/&omega;/g,"ω"],[/&thetasym;/g,"ϑ"],[/&upsih;/g,"ϒ"],[/&piv;/g,"ϖ"],[/&middot;/g,"·"],[/&nbsp;/g," "],[/&quot;/g,"'"],[/&amp;/g,"&"],[/&lt;/g,"<"],[/&gt;/g,">"],[/&#8226;/g,"•"],[/&OElig;/g,"Œ"],[/&oelig;/g,"œ"],[/&Scaron;/g,"Š"],[/&scaron;/g,"š"],[/&Yuml;/g,"Ÿ"],[/&fnof;/g,"ƒ"],[/&circ;/g,"ˆ"],[/&tilde;/g,"˜"],[/&ensp;/g,""],[/&emsp;/g,""],[/&thinsp;/g,""],[/&zwnj;/g,""],[/&zwj;/g,""],[/&lrm;/g,""],[/&rlm;/g,""],[/&ndash;/g,"–"],[/&mdash;/g,"—"],[/&lsquo;/g,"‘"],[/&rsquo;/g,"’"],[/&sbquo;/g,"‚"],[/&ldquo;/g,"“"],[/&rdquo;/g,"”"],[/&bdquo;/g,"„"],[/&dagger;/g,"†"],[/&Dagger;/g,"‡"],[/&bull;/g,"•"],[/&hellip;/g,"…"],[/&permil;/g,"‰"],[/&prime;/g,"′"],[/&Prime;/g,"″"],[/&lsaquo;/g,"‹"],[/&rsaquo;/g,"›"],[/&oline;/g,"‾"],[/&euro;/g,"€"],[/&trade;/g,"™"],[/&larr;/g,"←"],[/&uarr;/g,"↑"],[/&rarr;/g,"→"],[/&darr;/g,"↓"],[/&harr;/g,"↔"],[/&crarr;/g,"↵"],[/&lceil;/g,"⌈"],[/&rceil;/g,"⌉"],[/&lfloor;/g,"⌊"],[/&rfloor;/g,"⌋"],[/&loz;/g,"◊"],[/&spades;/g,"♠"],[/&clubs;/g,"♣"],[/&hearts;/g,"♥"],[/&diams;/g,"♦"],[/&#39;/g,"'"],[/\r\n/g,""],[/\n/g,""]];module.exports=class{config;constructor(t,s){this.config=s?{defaultConfig:e,...s}:e,setTimeout(this.steps(t),this.config.delay)}steps(e){const t=this.decodeHtml(e),s=this.htmlToJson(t);return this.jsonToSkeleton(s)}decodeHtml(e){return a.forEach((t=>{const[s,g]=t;e=e.replace(s,g)})),e}formatAttributes(e,t){if(!e)return{};const{attributeProcessor:s}=this;let g={};e.replace(o,(function(e,n,i){const r=Array.prototype.slice.call(arguments);if(r.length>=3){const e=i.replace(/(^|[^\\])"/g,'$1\\"');g[n]=s(n,e,t)}return""}));let n={};const i=this.config[t];return"buildInAttrs"in i&&(n=i.buildInAttrs),{attrsMap:g,...n}}attributeProcessor(e,t,s){const g=this.config[s];switch("clearAttrs"in g&&g.clearAttrs.includes(s)&&(t=""),e){case"src":if(["image","video"].includes(e)){const{srcFormat:e}=g[s];return e?e(t):t}return t;case"class":const{defaultClass:n}=g;return n?`${n} ${t}`:t}return t}formatElementName(e){return t.includes(e)?s[e]:"view"}htmlToJson(e){const{timeout:t,ignoredElement:s}=this.config,o=[],a=Date.now()+t;for(;e;){if(0===e.indexOf("</")){const t=e.match(n);if(!t)continue;const[g,i]=t;if(s.includes(i))continue;e=e.substring(g.length),o.push({type:"end",name:this.formatElementName(i),originName:i});continue}if(0===e.indexOf("<")){const t=e.match(g);if(!t)continue;const[n,a,l=""]=t;if(s.includes(a))continue;e=e.substring(n.length);const c=i.test(n)||r.includes(a),u=this.formatElementName(a);o.push({type:c?"selfClosing":"start",name:u,originName:a,attrs:this.formatAttributes(l,u)});continue}const t=e.indexOf("<"),l=t<0,c=l?e:e.substring(0,t);if(e=l?"":e.substring(t),o.push({type:"text",name:"text",text:c.trim()}),Date.now()>=a)break}return o}skeletonGenerator(e,t=0){if(e.length<=0)return[];let s=0;const g=[];for(;s<e.length;){const n=e[s],i=`${t}-${s}-${n.type}`;if("start"===n.type){const t=e.findIndex((({type:e,genKey:t})=>"end"===e&&t===n.genKey));g.push({miniParserId:i,...n,children:this.skeletonGenerator(e.slice(s+1,t),s)}),s=t+1}else g.push({miniParserId:i,...n}),s++}return g}jsonToSkeleton(e){const t=[];return e.forEach(((e,s)=>{const{type:g}=e;switch(g){case"start":e.genKey=s,t.push(s);break;case"end":const g=t.splice(t.length-1,1)[0];e.genKey=g}})),this.skeletonGenerator(e)}};
